@model InventoryManagement.Models.MasterDataDTO
@using InventoryManagement.Enums;
@using InventoryManagement.Models;
@using (Ajax.BeginForm("MasterRecordInsert", "Admin", new AjaxOptions { OnSuccess = string.Format("OnSuccessMasterRecordInsert(data,'{0}')", Model.Type) }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Name*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MasterName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MasterName, null, new { @class = "text-danger" })
            </div>
        </div>
        @if (MasterDataDTO.GetDisplayName((MasterDataType)(Model.Type)).ToString() == "Packing Type")
        {
            <div class="form-group">
                @Html.Label("Unites", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.UnitId, new SelectList(Model.UnitLists, "UnitId", "Unitname"), new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.TextAreaFor(model => model.TypeUnits, new { @class = "form-control", @cols = "40", @rows = "2" })*@
                </div>
            </div>
        }
        <div class="form-group">
            @Html.Label("Descrption", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new {  @class = "form-control", @cols = "40", @rows="2" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Active", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Isactive)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.HiddenFor(model => model.Type, Model.Type)
                @Html.HiddenFor(model => model.Id, Model.Id)
                @Html.HiddenFor(model => model.UnitLists, Model.UnitLists)
                <input name="btnSave" type="submit" value="@(Model.Id > 0 ? "Save" : "Create")" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
