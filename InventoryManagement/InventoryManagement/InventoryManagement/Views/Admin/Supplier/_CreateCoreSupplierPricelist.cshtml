@using InventoryManagement.Models
@using InventoryManagement.Enums

@model SupplierPriceListDTO
@{
    ViewBag.Title = "CoreSupplierPriceList";
}
@functions{

    public SelectList GetMasterData(MasterDataType type)
    {
        if (Session["MasterData"] != null)
        {
            List<MasterDataDTO> masterData = (List<MasterDataDTO>)Session["MasterData"];
            if (masterData != null && masterData.Any())
            {
                return new SelectList(masterData.Where(c => c.Type == type).Select(c => new SelectListItem
                {
                    Text = c.MasterName,
                    Value = c.Id.ToString()
                }), "Value", "Text");
            }
        }
        return new SelectList(new List<MasterDataDTO>());
    }
}


<h2>Core Supplier Price List</h2>


<div class="form-group">
    @Html.Label("Supplier Name", htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.SupplierId, new SelectList(Model.SupplierList, "Id", "SupplierBussinessName", "Select Supplier"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.Brand, GetMasterData(MasterDataType.Brand), "Select Brand", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.FreezingType, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.FreezingType, GetMasterData(MasterDataType.FreezingType), "Select Freezing Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FreezingType, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Soaked, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.DropDownListFor(model => model.Soaked, GetMasterData(MasterDataType.Soaked), "Select Soaked", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Soaked, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Variety, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.Variety, GetMasterData(MasterDataType.Variety), "Select Variety", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Variety, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Specie, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.Specie, GetMasterData(MasterDataType.Specie), "Select Specie", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Specie, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PackingType, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        <span>
            @Html.EditorFor(model => model.PackingCount, new { @class = "form-control" })
            @Html.DropDownListFor(model => model.PackingType, GetMasterData(MasterDataType.PackingType), "Select Packing Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PackingType, "", new { @class = "text-danger" })
        </span>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProductForm, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.ProductForm, GetMasterData(MasterDataType.ProductForm), "Select Product Form", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductForm, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.EditorFor(model => model.Type, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.Label("Grade", htmlAttributes: new { @class = "control-label  col-md-3" })
    <div class="col-md-7">
        @Html.DropDownListFor(model => model.Grade, GetMasterData(MasterDataType.Grades), "Select Grades", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.VenderUnits, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.EditorFor(model => model.VenderUnits, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.VenderUnits, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ExpectedDays, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-7">
        @Html.EditorFor(model => model.ExpectedDays, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ExpectedDays, "", new { @class = "text-danger" })
    </div>
</div>





