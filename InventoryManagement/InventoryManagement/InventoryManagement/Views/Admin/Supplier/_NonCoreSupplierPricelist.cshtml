@model IEnumerable<InventoryManagement.Models.SupplierPriceListDTO>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifiedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SupplierId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FreezingType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Variety)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Specie)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackingType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductForm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Grade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ply)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CoreType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Soaked)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackingCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VenderUnits)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExpectedDays)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        <th></th>
    </tr>
@if (Model != null && Model.Any())
{
@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifiedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedOn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifiedOn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SupplierId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Brand)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FreezingType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Variety)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Specie)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PackingType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductForm)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Grade)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ply)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CoreType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Soaked)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PackingCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VenderUnits)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExpectedDays)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.ActionLink("Edit", "EditSupplierPricelist", new { id = item.Id }) @Html.Raw(" | ")
            @Html.ActionLink("Delete", "Delete", new { id = item.Id },new { onclick = "return confirm('Are sure wants to delete?');" })
        </td>
    </tr>
}
}

</table>
