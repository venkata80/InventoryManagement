@using InventoryManagement.Models
@using InventoryManagement.Enums


@model SupplierPriceListDTO
@{
    ViewBag.Title = "Supplier Price List";
}
@functions{

    public SelectList GetMasterData(MasterDataType type)
    {
        if (Session["MasterData"] != null)
        {
            List<MasterDataDTO> masterData = (List<MasterDataDTO>)Session["MasterData"];
            if (masterData != null && masterData.Any())
            {
                return new SelectList(masterData.Where(c => c.Type == type).Select(c => new SelectListItem
                {
                    Text = c.MasterName,
                    Value = c.Id.ToString()
                }), "Value", "Text");
            }
        }
        return new SelectList(new List<MasterDataDTO>());
    }

    public SelectList GetSoakedItems()
    {
        return new SelectList(
            new List<SelectListItem>
            {
        new SelectListItem {Value="1", Text="Soaked" },
        new SelectListItem {Value="2", Text="NonSoaked" }
            }, "Value", "Text");
    }
}
<h2>Supplier Price List</h2>

@using (Html.BeginForm("SaveSupplierPriceList", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default ">
        <div class="panel-heading">
            <b> Add Product</b> <span class="label label-info ">    <span class="glyphicon glyphicon-th-list"></span>  @Html.ActionLink("View Employers", "Employers", "Admin")</span>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Id == Guid.Empty)
                    {
                        @Html.RadioButtonFor(model => model.Type, 1, new { @id = "rdCoreItem", @onchange = "OnTypeClicked(1)" })
                        @Html.LabelFor(model => model.Type, "Core Item", new { @for = "rdCoreItem" })

                        @Html.RadioButtonFor(model => model.Type, 2, new { @id = "rdNonCoreItem", @onchange = "OnTypeClicked(2)" })
                        @Html.LabelFor(model => model.Type, "Non Core Item", new { @for = "rdNonCoreItem" })

                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.LabelFor(model => model.Type, Model.Type == 1 ? "Core Item" : "Non Core Item")
                        @Html.HiddenFor(model => model.Type, Model.Type)
                    }
                </div>
            </div>

            <div id="dvpsupplierpricelisttypecontent">
                @if (Convert.ToInt64(Model.Type) > 0)
                {
                    if (Model.Type.Value == 1)
                    {
                        @Html.Partial("Supplier/_CreateCoreSupplierPricelist", Model);
                    }
                    else
                    {
                        @Html.Partial("Supplier/_CreateNonCoreSupplierPricelist", Model);
                    }
                }
            </div>

            <div id="dvcommonsupplierpricelistcontent" class="collapse">
                 <div class="form-group"></div>
                <div class="row">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.HiddenFor(model => model.Id, Model.Id)
                        <br />
                        <input type="submit" value="@(Model.Id != Guid.Empty ? "Save" : "Create")" class="btn btn-default" />
                        <input type="button" value="Cancel" class="btn" onclick="javascript: window.location.href='@Url.Action("SupplierPriceList","Admin")'" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@section scripts{
    <script type="text/javascript">
        function OnTypeClicked(type) {
            $('#dvpsupplierpricelisttypecontent').load('@Url.Action("CoreSupplierPriceList", "Admin")', { coreItem: type }, function (response, status, xhr ) {
                $('#ThresholdLimit, #Description').val('');
                $('#dvcommonsupplierpricelistcontent').removeClass();
            });
        }
    </script>
    }

