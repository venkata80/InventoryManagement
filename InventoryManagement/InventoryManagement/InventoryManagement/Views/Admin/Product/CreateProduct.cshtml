@using InventoryManagement.Models
@using InventoryManagement.Enums

@model ProductDTO
@{
    ViewBag.Title = "CreateProduct";
}

<h2>Create Product</h2>

@using (Html.BeginForm("SaveProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default ">
        <div class="panel-heading">
            <b> Add Product</b> <span class="label label-info ">    <span class="glyphicon glyphicon-th-list"></span>  @Html.ActionLink("View Products", "Products", "Admin")</span>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @if (Model.Id == Guid.Empty)
                    {
                        @Html.RadioButtonFor(model => model.Type, 1, new { @id = "rdCoreItem", @onchange = "OnTypeClicked(1)" })
                        @Html.LabelFor(model => model.Type, "Core Item", new { @for = "rdCoreItem" })

                        @Html.RadioButtonFor(model => model.Type, 2, new { @id = "rdNonCoreItem", @onchange = "OnTypeClicked(2)" })
                        @Html.LabelFor(model => model.Type, "Non Core Item", new { @for = "rdNonCoreItem" })

                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.LabelFor(model => model.Type, Model.Type == 1 ? "Core Item" : "Non Core Item")
                        @Html.HiddenFor(model => model.Type, Model.Type)
                    }
                </div>
            </div>

            <div id="dvproducttypecontent">
                @if (Convert.ToInt64(Model.Type) > 0)
                {
                    if (Model.Type.Value == 1)
                    {
                        @Html.Partial("Product/_CreateCoreProduct", Model);
                    }
                    else
                    {
                        @Html.Partial("Product/_CreateNonCoreProduct", Model);
                    }
                }
            </div>

            <div id="dvcommonproductcontent" class="@(Model.Id != Guid.Empty ? string.Empty : "collapse")">
                <div class="form-group">
                    @Html.LabelFor(model => model.ThresholdLimit, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ThresholdLimit, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group"></div>
                <div class="row">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.HiddenFor(model => model.Id, Model.Id)
                        <br />
                        <input type="submit" value="@(Model.Id != Guid.Empty ? "Save" : "Create")" class="btn btn-default" />
                        <input type="button" value="Cancel" class="btn" onclick="javascript: window.location.href='@Url.Action("Products","Admin")'" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts{
    <script type="text/javascript">
        function OnTypeClicked(type) {
            $('#dvproducttypecontent').load('@Url.Action("CoreProduct","Admin")', { coreItem: type }, function (response, status, xhr ) {
                $('#ThresholdLimit, #Description').val('');
                $('#dvcommonproductcontent').removeClass();
            });
        }
    </script>
}